[build-system]
requires = ["py-build-cmake", "nanobind==2.5.0"]
build-backend = "py_build_cmake.build"

[project]
name = "proxy-inference-engine"
version = "0.1.1"
description = "Optimized LLM & MLX inference for Apple Silicon."
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "The Proxy Company", email = "hello@theproxycompany.com"}
]
keywords = ["mlx", "inference", "llm", "apple", "vision", "language", "model", "ai", "proxy"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: MacOS :: MacOS X",
]

dependencies = [
    "pse",
    "mlx>=0.25.2",
    "pillow",
    "requests",
    "huggingface-hub",
    "fastapi[standard]",
    "pydantic-settings",
    "py-build-cmake",
    "nanobind==2.5.0",
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "mypy",
    "pytest",
    "build",
    "twine",
    "ruff",
    "pre-commit"
]

[tool.uv.sources]
mlx = { path = "src/pie_core/external/mlx", editable = true }

[project.urls]
"Homepage" = "https://github.com/TheProxyCompany/proxy-inference-engine"
"Bug Tracker" = "https://github.com/TheProxyCompany/proxy-inference-engine/issues"
"Documentation" = "https://github.com/TheProxyCompany/proxy-inference-engine"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true
packages = ["proxy_inference_engine"]

[tool.setuptools.package-data]
"proxy_inference_engine" = ["*.so", "*.dylib", "*.metallib"]

[tool.py-build-cmake.cmake]
source_path = "src/pie_core"
args = ["-Wdev"]
build_args = ["-j"]
build_type = "RelWithDebInfo"
find_python = true
install_components = ["python_modules"]

[tool.ruff.lint]
extend-select = [
    "B",    # flake8-bugbear
    "I",    # isort
    "PGH",  # pygrep-hooks
    "RUF",  # Ruff-specific
    "UP",   # pyupgrade
    "SLF",  # string-literal-format
    "F8",   # flake8-comprehensions
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.black]
line-length = 120
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 120
